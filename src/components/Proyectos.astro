---
interface ImagenProcesada {
  src: string;
  width: number;
  height: number;
  format: string;
}

import logo from "../images/logo.png";
import fiverr from "../images/fiverr.svg";

// ðŸ‘‡ CorrecciÃ³n: import.meta.glob retorna objetos con propiedad 'default' que es ImagenProcesada
const imagenes: Record<string, { default: ImagenProcesada }> = import.meta.glob(
  "../images/proyecto/*.{jpg,jpeg,png,webp,svg}",
  { eager: true },
);

// ðŸ‘‡ Extraer solo los datos de cada imagen
const fotos: ImagenProcesada[] = Object.values(imagenes).map(
  (img) => img.default,
);
---

<div class="portafolio">
  <div class="perfil">
    <img class="logo" src={logo.src} alt="Revoco Arquitectura" />
  </div>
  <div class="redes">
    <img src={fiverr.src} alt="icono de Fiverr" />
    <i class="bi bi-instagram"></i>
    <i class="bi bi-behance"></i>
  </div>
  <div class="fotos">
    {
      fotos.map((foto, i) => (
        <div class="image-container">
          <img src={foto.src} alt={`foto-${i}`} class="foto-item" />
          <div class="overlay" />
        </div>
      ))
    }
  </div>
</div>

<style>
  .portafolio {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin-top: 120px;
    gap: 10px;
  }

  .logo {
    width: 140px;
    height: auto;
  }

  .perfil {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 150px;
    height: 150px;
    border-radius: 50%;
    border: 1px solid #ecebeb;
  }

  .redes {
    display: flex;
    align-items: center;
    margin-top: 10px;
  }

  .redes i {
    font-size: 1.75rem;
    margin-right: 10px;
  }

  .redes img {
    width: calc(1.75rem - 2px);
    margin-right: 10px;
    margin-left: 20px;
  }

  .fotos {
    max-width: 1000px;
    margin-top: 20px;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 8px;
  }

  .foto-item {
    width: 100%;
    height: 100%;
    object-fit: cover;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    display: block; /*  Para evitar espacio extra debajo */
  }

  .image-container {
    position: relative;
    width: 300px;
    height: 410px;
  }

  .image-container .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0); /* transparente inicialmente */
    transition: background-color 0.3s ease;
  }

  .image-container:hover .overlay {
    background-color: rgba(0, 0, 0, 0.5); /* oscuro al hacer hover */
  }

  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1; /* Para que estÃ© encima de la imagen */
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0); /* Inicialmente transparente */
    transition: background-color 0.3s ease;
  }
  
</style>
