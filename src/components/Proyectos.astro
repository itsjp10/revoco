---
interface ImagenProcesada {
  src: string;
  width: number;
  height: number;
  format: string;
}

import logo from "../images/logo.png";
import fiverr from "../images/fiverr.svg";

const imagenes: Record<string, { default: ImagenProcesada }> = import.meta.glob(
  "../images/proyecto/*.{jpg,jpeg,png,webp,svg}",
  { eager: true },
);

const fotos: ImagenProcesada[] = Object.values(imagenes).map(
  (img) => img.default,
);
---

<div class="portafolio">
  <div class="perfil">
    <img class="logo" src={logo.src} alt="Revoco Arquitectura" />
  </div>
  <div class="redes">
    <img src={fiverr.src} alt="icono de Fiverr" />
    <i class="bi bi-instagram"></i>
    <i class="bi bi-behance"></i>
  </div>
  <div class="fotos">
    {
      fotos.map((foto, i) => (
        <div class={`image-container${(i + 1) % 3 === 0 ? "tres" : ""}`}>
          <img src={foto.src} alt={`foto-${i}`} class="foto-item" />
          <div class="overlay" />
          <i class="bi bi-suit-heart-fill" />
        </div>
      ))
    }
  </div>
  <div id="modal" class="modal hidden">
    <span id="cerrarModal" class="cerrar">&times;</span>
    <img id="modalImagen" src="" alt="Imagen ampliada" />
  </div>
</div>

<style>
  .portafolio {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin-top: 120px;
    gap: 10px;
  }

  .logo {
    width: 140px;
    height: auto;
  }

  .perfil {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 150px;
    height: 150px;
    border-radius: 50%;
    border: 1px solid #ecebeb;
  }

  .redes {
    display: flex;
    align-items: center;
    margin-top: 10px;
  }

  .redes i {
    font-size: 1.75rem;
    margin-right: 10px;
  }

  .redes img {
    width: calc(1.75rem - 2px);
    margin-right: 10px;
    margin-left: 20px;
  }

  .fotos {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    grid-auto-flow: dense;
    gap: 8px;
    max-width: 1000px;
    margin-top: 20px;
  }

  .foto-item {
    width: 100%;
    height: 100%;
    object-fit: cover;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    display: block; /*  Para evitar espacio extra debajo */
  }

  .image-container {
    position: relative;
    width: 300px;
    height: 300px;
  }

  .image-containertres {
    position: relative;
    width: 300px;
    grid-row: span 2;
  }

  .image-container .overlay,  .image-containertres .overlay{ 
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0); /* transparente inicialmente */
    transition: background-color 0.3s ease;
  }

  .image-container:hover .overlay, .image-containertres:hover .overlay {
    background-color: rgba(0, 0, 0, 0.5); /* oscuro al hacer hover */
    cursor: pointer;
  }

  .image-container:hover i, .image-containertres:hover i {
    opacity: 1; /* Mostrar icono al hacer hover */
    cursor: pointer;
  }

  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0); /* Inicialmente transparente */
    transition: background-color 0.3s ease;
  }

  .image-container i, .image-containertres i {
    color: white;
    position: absolute;
    position: absolute;
    top: 45%;
    left: 45%;
    z-index: 1; /* Para que est√© encima de la imagen */
    font-size: 2.5rem;
    opacity: 0;
  }

  .modal {
    position: fixed;
    display: flex;
    justify-content: center;
    align-items: center;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.8);
    z-index: 1000;
  }

  .modal.hidden {
    display: none;
  }

  .modal img {
    max-width: 90%;
    max-height: 90%;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  }

  .cerrar {
    position: absolute;
    top: 20px;
    right: 30px;
    font-size: 2.5rem;
    color: white;
    cursor: pointer;
    z-index: 1001;
  }
  @media (max-width: 1000px) {
    .fotos {
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    }
    .image-container {
      width: 200px;
      height: 200px;
    }
    .image-containertres {
      width: 200px;
      grid-row: span 2;
    }
  }
</style>

<script type="module">
  const modal = document.getElementById("modal");
  const modalImg = document.getElementById("modalImagen");
  const cerrarBtn = document.getElementById("cerrarModal");

  document.querySelectorAll(".image-container").forEach((container) => {
    container.addEventListener("click", () => {
      const img = container.querySelector("img");
      modal.classList.remove("hidden");
      modalImg.src = img.src;
    });
  });

  document.querySelectorAll(".image-containertres").forEach((container) => {
    container.addEventListener("click", () => {
      const img = container.querySelector("img");
      modal.classList.remove("hidden");
      modalImg.src = img.src;
    });
  });

  cerrarBtn.addEventListener("click", () => {
    modal.classList.add("hidden");
    modalImg.src = "";
  });

  modal.addEventListener("click", (e) => {
    if (e.target === modal) {
      modal.classList.add("hidden");
      modalImg.src = "";
    }
  });
</script>
